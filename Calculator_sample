#include<stdio.h>
#include<conio.h>
#include<stdlib.h>

/*
type definition
	begin:			'<'
	numbers:		'1'
	dots:			'.'
	end:			'>'
	else:			type = sprite
*/


typedef struct data{
	data *to;
	data *from;
	int value;
	int type;
	char sprite;
}data;
data node[100];

data *head,*tail,*reader;

int parsing();
void assign(int i);
void despace(int N);
void read();

int main()
{
	int i,N;
	N=parsing();
	read();
}

int parsing()
{
	int i=1;
	do
	{
		scanf("%c",&node[i].sprite);
		assign(i);
		i++;
	}while(node[i-1].sprite!='\n');
	int N=i;
	
	despace(N);
	
	return N;
}

void assign(int i)
{
	node[0].value=0;
	node[0].type='<';
	
	if(48<=node[i].sprite && node[i].sprite<=57)
	{
		node[i].value = node[i].sprite - 48;
		node[i].type = '1';
	}
	
	else if(node[i].sprite=='.')
	{
		node[i].value = 0;
		node[i].type = '.';
	}
	
	else if(node[i].sprite=='\n')
	{
		node[i].value = 0;
		node[i].type = '>';
	}
	
	else
	{
		node[i].value = 0;
		node[i].type = node[i].sprite;
	}
	
	node[i-1].to=&node[i];
	node[i].from=&node[i-1];
}

void despace(int N)
{
	head=&node[0];
	do
	{
		if((*head).type==' ')
		{
			tail=(*head).from;
			while((*head).type==' ')
			{
				head=(*head).to;
			}
			(*tail).to=&(*head);
			head=tail;
		}
		head=(*head).to;
	}while((*head).type!='>');
}

void read()
{
	reader=&node[0];
	do
	{
		printf("%c",(*reader).type);
		reader=(*reader).to;
		if((*reader).type=='>')
		printf("%c",(*reader).type);
	}while((*reader).type!='>');
}
